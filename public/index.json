[{"content":"The URL for level1 changed from 274877906944.html to map.html.\nAs I said previously for it\u0026rsquo;s good practice to check the HTML title first.\nThe HTML title for level1 is What about making trans?\nMoving your cursor to the tab will show the HTML title.\nYou can also view it as a HTML tag by right clicking and Inspect.\nI\u0026rsquo;m also given an a scratch book.\nIt\u0026rsquo;s a notebook that has K-\u0026gt;M, O-\u0026gt;Q, E-\u0026gt;G written on it.\nIf you look carefully shifting 2 alphabets from K gets you M, O gets you Q, E gets you G.\nK,L,M O,P,Q E,F,G There\u0026rsquo;s also a ciphertext.\nThat means shifting 2 characters from our ciphertext g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr'q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb. lmu ynnjw ml rfc spj. will likely gives us the decipher.\nThere is a famous substitution cipher called Caesar_cipher that\u0026rsquo;s similar to the problem in level1.\nThe only difference beteween Caesar cipher and the problem in level1 is that Caesar Cipher shifts 3 letters instead of 2.\nAnother famous substitution called ROT13 is famous.\nROT13 shifts 13 lettters as it says in the name.\nThe dec function gets each character\u0026rsquo;s ASCII value and subtracts a to get the index of the alphabet and adds 2. this gives us the offset(how far it is away from a) and takes the remainder of it divided by 26. you need to divide it by 26 because there are only 26 letters in the alphabets. 97 is the ASCII value for 'a' so by adding the offset with 97 gives you the actual letters.\nI initially wrote the dec function like this.\ndef dec(cipher): decrypt = \u0026#34;\u0026#34; for c in cipher: if c in letters: decrypt += chr((ord(c) - ord(\u0026#34;a\u0026#34;) + 2) % 26 + 97) else: decrypt += c return decrypt Many people said string concatenation is generally bad practice in Python. Especially if the string is long.\nReading this post will give an detailed explanation.\nAccording to the post string concatenation is fine if the string is short but using ''.join() is the better choice so I went with that.\nimport string letters = string.ascii_lowercase def dec(cipher): decrypt = [] for c in cipher: if c in letters: decrypt.append(chr((ord(c) - ord(\u0026#34;a\u0026#34;) + 2) % 26 + 97)) else: decrypt.append(c) return \u0026#34;\u0026#34;.join(decrypt) # print(dec(\u0026#34;map\u0026#34;)) =\u0026gt; ocr The decipher looks like this\ni hope you didnt translate it by hand. thats what computers are for. doing it in by hand is inefficient and that's why this text is so long. using string.maketrans() is recommended. now apply on the url\nThe decipher tells me to use string.maketrans() but because I\u0026rsquo;ve never used string.maketrans() I decided not to.\nSince the URL for level1 is http://www.pythonchallenge.com/pc/def/map.html I should do the 2 letter shift on the word map.\nPassing map to the dec function gives you ocr.\nChanging the URL from http://www.pythonchallenge.com/pc/def/map.html to http://www.pythonchallenge.com/pc/def/ocr.html gets you to level2.\nP.S you can also do this using shellscript.\necho \u0026#34;g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr\u0026#39;q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb. lmu ynnjw ml rfc spj.\u0026#34; | tr a-z c-za-x If the letter is between a-x you can 2 letter shift it to c-z, but if the letter is y or z it needs to go back to a or b so the letters are changed rom all the letters except y,z where the original letters are. That\u0026rsquo;s why you need the extra a-x after c-z.\n","permalink":"http://localhost:1313/posts/pythonchallenge/1/","summary":"\u003cp\u003eThe URL for level1 changed from \u003ccode\u003e274877906944.html\u003c/code\u003e to map.html.\u003c/p\u003e\n\u003cp\u003eAs I said previously for it\u0026rsquo;s good practice to check the HTML title first.\u003c/p\u003e\n\u003cp\u003eThe HTML title for level1 is \u003cem\u003eWhat about making trans?\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eMoving your cursor to the tab will show the HTML title.\u003c/p\u003e\n\u003cp\u003eYou can also view it as a HTML tag by right clicking and Inspect.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m also given an a scratch book.\u003c/p\u003e\n\u003cfigure\u003e\n    \u003cimg loading=\"lazy\" src=\"/img/pythonchallenge/level1/map.jpg\"\n         alt=\"map\"/\u003e \n\u003c/figure\u003e\n\n\u003cp\u003eIt\u0026rsquo;s a notebook that has \u003ccode\u003eK-\u0026gt;M, O-\u0026gt;Q, E-\u0026gt;G\u003c/code\u003e written on it.\u003c/p\u003e","title":"Level1"},{"content":"What is Python Challenge ?\nPython challenge is a set of puzzles that can be solved by using Python.\nCurrently there are 33 levels.\nIMHO Python Challenge is not for beginners who have never coded in Python before or have little experience in Python.\nIt\u0026rsquo;s for people who have some experience in Python but just aren\u0026rsquo;t super good.\nIf it\u0026rsquo;s your first time writing Python code I wouldn\u0026rsquo;t try to solve these problems. Reading O\u0026rsquo;reilly books or learning from online courses would help you more.\nFor courses I recommend: The course explains Python in a pretty detailed manner for beginners.\nYou should try to read as many Python books as possible. Python Challenge is for people who know Python but just aren\u0026rsquo;t familiar with using various modules and writing classes in Python.\nEach level in Python Challenge usually requires you to use a certain module.\nLevel 0 The title for level0 is warming up. It\u0026rsquo;s always a good idea to check the HTML title because the HTML titles are usually helpful to solve the problems.\nBy looking at the tab where you opened the pythonchallenge problem, you can check the title.\nThe title of level0 is warming_up.\nAfter checking the HTML title you should also have a look at the image file Python Challenge provides you.\nUsually the image files title are also hint to solve the puzzle. You can view that using right-click and Inspect. You\u0026rsquo;ll then see some HTML tags.\nThe tag after \u0026lt;img src\u0026gt; is the name of the file. In level 0 \u0026lt;img src=\u0026quot;calc.jpg\u0026quot;\u0026gt; it\u0026rsquo;s calc.jpg.\nFrom the title I can guess that this level shouldn\u0026rsquo;t be that hard.\nLevel0 has a picture of an old desktop PC\nOn the monitor there is a yellow rectangle with 2**38 written on it.\nBelow the image of the computer there is a hint that tells you to change the URL address.\nWith all the information given it looks like I should use 2**38 and change the URL.\nThe current URL is http://www.pythonchallenge.com/pc/def/0.html.\nIf you look closely you can see that the html file starts with a number.\nCalculating 2**38 and replacing it from 0 would probably solve level0.\nPython has many ways to calculate 2**38.\n1. Using the ** operator\nYou can directly use ** to calculate powers of numbers.\nprint(2**38) 2. Using the bit shift operator\nPython provides bit shifting operators. That would be another option.\nprint(2 \u0026lt;\u0026lt; 37) 3. Using the pow function Python provides the built-in pow to calculate powers of numbers.\nThe pow function also let\u0026rsquo;s you calculate the modular as well.\nprint(pow(2, 38)) 2**38 gives us 274877906944.\nChanging the URL from 0.html to 274877906944.html takes you to level1.\nI\u0026rsquo;ll try to explain the code and how to solve these problems in detail as much as possible.\nI struggled a lot when solving these problems on my own.\nThe solutions or writeups I found online were hard to understand.\nThat might be because I\u0026rsquo;m dumb or something lol but anyways\u0026hellip;\n","permalink":"http://localhost:1313/posts/pythonchallenge/0/","summary":"\u003cp\u003eWhat is Python Challenge ?\u003c/p\u003e\n\u003cp\u003ePython challenge is a set of puzzles that can be solved by using Python.\u003c/p\u003e\n\u003cp\u003eCurrently there are 33 levels.\u003c/p\u003e\n\u003cp\u003eIMHO Python Challenge is not for beginners who have never coded in Python before or have little experience in Python.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s for people who have some experience in Python but just aren\u0026rsquo;t super good.\u003c/p\u003e\n\u003cp\u003eIf it\u0026rsquo;s your first time writing Python code I wouldn\u0026rsquo;t try to solve these problems.\nReading O\u0026rsquo;reilly books or learning from online courses would help you more.\u003c/p\u003e","title":"Level0"},{"content":"Second post\n","permalink":"http://localhost:1313/posts/second/","summary":"\u003cp\u003eSecond post\u003c/p\u003e","title":"Second"},{"content":"This is a heading one This is a heading two This is a paragraph\n","permalink":"http://localhost:1313/posts/first/","summary":"\u003ch1 id=\"this-is-a-heading-one\"\u003eThis is a heading one\u003c/h1\u003e\n\u003ch2 id=\"this-is-a-heading-two\"\u003eThis is a heading two\u003c/h2\u003e\n\u003cp\u003eThis is a paragraph\u003c/p\u003e","title":"First"}]